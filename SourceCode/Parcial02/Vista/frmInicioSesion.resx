<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCADhAOEDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8qqKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoooo
        AKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoorofB/g+48VXoADR2aN
        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
        epd+Sb/Q5FQy6Du5tvyTPzG0v4eXU80UYizI/wB1O7V9DfB/9ivxt8QLiExaPJZ2b8/aL5DHx/u/er7H
        g+KH7PXwfh/4pjRpPEd6n3ZLK12q3/bRv/iq4Hx5+254w8QQS2Xhy1tPCGnfc/0b95Pt/wB77q/+PV3w
        5KS/cUbec9Pw3O+E1TX+y0Lf3p/5HonhP4G/Cr9lDTIta8ZX8eo69s/dW/EkrN/djjX7teI/Hv8Aae1v
        4wTf2dF/xJfDCf6rTIX/ANZ/tTbfvf7teOa94ml1C8lvb+/uL29f7891K0kjf8CauE8QeM44WAEmT6Cv
        PrYyMJc7fPU79F/hWy9dzjrYiFOftakvaT79F6I2PEHiKOxiAEmT6V89eO/HUutXElvbyfuvuySqfv8A
        qAfT37/Tq3xt46n1mSS2glzEeJJV/i/2R7evr9OvGV8Vi8ZKq2k/mfK4rFSrSeoUUUV5R5oUUUUAFFFF
        ABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABU9hePp99b3Uaq0kEiyqrjKkqQQD7cVBRTTcXdDTad0fU/g
        Xx5Z6hZLc2s5VX+8F+Vs91b0I/8Ar9K7NPE0X/P1J/39avjTR9autDuDLbMPmGGjflW9Mj2roY/ilq8Y
        x5No3+8jn/2avq6ee1VFKT1Po6ecTUbS39D6nfxHF/z1kk/32ZqrPrlpb/8APP8A74WvmQ/FbVz/AMu9
        n/3w/wD8VUUvxO1aXjyrVP8AdRv/AIqree1GviNP7Yl0dvkfR1540tLf/lrXOap8RIz/AKmTNeCTeNL+
        4+8kI+gb/Gs+41u9uJC/nvFxjbExUfzrz6uZe0WrbOGrmEqmrbZ6V4j+KiIzIm6WdTgxrwB06t/hnp2r
        gNZ8UXOrYVc28ePmVWyW+p449qxqK8qpialTS9kebOvOel9AooorlOcKKKKACiiigAooooAKKKKACiii
        gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
        gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
        gAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiii
        gD//2Q==
</value>
  </data>
</root>